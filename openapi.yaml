openapi: 3.0.1
info:
  title: TravelSite
  description: ""
  termsOfService: ""
  contact:
    email: "hinz@gmail.de"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:3000
tags:
  - name: trips
    description: Everything about your trips

paths:
  /trips:
    post:
      tags:
        - trips
      summary: Add a new trip
      requestBody:
        description: Trip object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trip"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedTrip"
    get:
      tags:
        - trips
      summary: Get all trips
      requestBody:
        description: User ID
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserId"
        required: true
      responses:
        "200":
          description: Successfull request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SavedTrip"
  /trips/{email}:
    post:
      tags:
        - trips
      summary: Get all trips
      requestBody:
        description: User ID
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserId"
        required: true
      responses:
        "200":
          description: Successfull request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SavedTrip"

  /trips/{tripId}:
    delete:
      tags:
        - trips
      summary: Delete a trip by ID
      parameters:
        - name: tripId
          in: path
          description: ID of trip to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: successful operation
        "400":
          description: Bad request
          content: {}
        "404":
          description: Trip not found
          content: {}
    patch:
      tags:
        - trips
      summary: update a trip by ID
      parameters:
        - name: tripId
          in: path
          description: ID of trip to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Trip object that needs to be updated
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trip"
        required: true
      responses:
        "204":
          description: successful operation
        "400":
          description: Bad request
          content: {}
        "404":
          description: Trip not found
          content: {}

  /trips/{userID}:
    post:
      tags:
        - trips
      summary: Add a new trip to user with userID
      requestBody:
        description: Trip object that needs to be added
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trip"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SavedTrip"
    get:
      tags:
        - trips
      summary: Get all trips from specific user
      parameters:
        - name: userID
          in: path
          description: ID of user
          required: true
          schema:
            type: string
            format: email
            items:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: Successfull request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SavedTrip"

  /user:
    get:
      tags:
        - user
      summary: get all users
      responses:
        "200":
          description: Successfull request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"
    post:
      tags:
        - user
      summary: create new user and insert into database
      responses:
        "200":
          description: Successfull request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"
  /user/{email}:
    delete:
      tags:
        - trips
      summary: Delete a user by email
      parameters:
        - name: email
          in: path
          description: email of user to delete
          required: true
          schema:
            type: string
            format: email
      responses:
        "204":
          description: successful operation
        "400":
          description: Bad request
          content: {}
        "404":
          description: Trip not found
          content: {}
  /login:
    post:
      tags:
        - login
      summary: Log in and get cookie for authentication
      responses:
        "200":
          description: Successfull request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Login"

  /logout:
    post:
      tags:
        - logout
      summary: Logout
      responses:
        "200":
          description: Successfull request

components:
  schemas:
    Trip:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        start:
          type: string
          format: date
        end:
          type: string
          format: date
        country:
          type: string
        user_id:
          type: string
    SavedTrip:
      allOf:
        - $ref: "#/components/schemas/Trip"
        - type: object
          required:
            - id
          properties:
            id:
              type: string
              format: uuid
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    UserId:
      type: object
      properties:
        user_id:
          type: string
